{'CRC32': '357F6C29', 'FileName': './usr/lib64/perl5/vendor_perl/5.34/LWP/media.types', 'FileSize': '49815', 'MD5': 'BC7A9AF9D581499216271D22C96092AA', 'OpSystemCode': {'MfgCode': '1006', 'OpSystemCode': '362', 'OpSystemName': 'TBD', 'OpSystemVersion': 'none'}, 'ProductCode': {'ApplicationType': 'software collection', 'Language': 'English', 'MfgCode': '369', 'OpSystemCode': '51', 'ProductCode': '15104', 'ProductName': 'LXFDVD148', 'ProductVersion': '2011'}, 'SHA-1': 'FC6D6F904F054043B1329DDABC36CDBE83C8685A', 'SHA-256': 'B469FDED6CD6A83153B666D10E452036150F7E0F3FD15523577007CC2193D2BC', 'SHA-512': '4261AF17AE5BDC3C83F57C56F8D55EE1B65C94B41EB80262BD4B22FBA66249D7AB95C6602C1022A2D3FF21483A47BD9B058972AF0B60725FDB1FFB6DC7464BE4', 'SSDEEP': '1536:8OMPaMOe+y/K0nzF6ZL9ESV3YmdijkaJXIr7988O8rzGtiTUGQAs1obo1z9M2dX3:8OMPaMOe+y/K0nzF6ZL9ESV3YmdijkaX', 'SpecialCode': '', 'TLSH': 'T1852319E3B40B64F20FE735BFACA7C6E43933214E2DDA45A6FB59854C120865D035B62D', 'db': 'nsrl_legacy', 'insert-timestamp': '1636380251.3208838', 'source': 'snap:rNkfrcleS3BUFWEnHttEfmQNWmzeQEgw_1', 'tar:gname': 'root', 'tar:uname': 'root', 'hashlookup:parent-total': 161, 'parents': [{'FileName': 'https://ftp.lysator.liu.se/pub/OpenBSD/6.9/packages//mips64el//p5-LWP-MediaTypes-6.02p0.tgz', 'MD5': '865FDE31442F70235B2056A5755799F1', 'SHA-1': '004E6D4BCCD6D12B92EF9036239A20F9894C7033', 'SHA-256': 'C81A209469ABF8B04234B3B7C50E00DF924F46733DDCD348D19BA1077D80C681', 'SSDEEP': '384:K9/Vm2/if+J2afpHkPfNfIaEs+7yjQtahTa4Xc++kXIXEOAhYh9fSipiq3:K9/4ZGTfpHkPOafcaTdQiOJ9fSipiq3', 'TLSH': 'T1F882D1B9CF698920687CDEA4FF0B607527CD4F31E29A0DD9509345161D243A9C5DAD38'}, {'FileName': 'https://ftp.lysator.liu.se/pub/OpenBSD/5.8/packages//sparc64//p5-LWP-MediaTypes-6.02.tgz', 'MD5': '97B41BC0EF6E409874713F2CB365651F', 'SHA-1': '0193D3DD81A48F7A10B0A06FDB4C41A9B230CE26', 'SHA-256': '7020F7EF88BF558684918F4C4F90A08133993BA22C9C84B374ED4028514964FB', 'SSDEEP': '384:KZP5GMUnpaZPw1SnBbtKiLk97itEQ3yLdCgly2j5O3o+Z2fLPfmJ5sP:AP5cpYPw1SBbt1w72tALlk3GDqU', 'TLSH': 'T1FE92E19ED7878225D722A7A2204F75D67CEF3494B64E6B3330959C4E2D6C58BFD72000'}, {'FileSize': '22064', 'MD5': '83A663C7827F95A983212A2F1B4D3AE1', 'PackageDescription': 'module to guess media type for a file or a URL\n LWP::MediaTypes provides functions for handling media (also known as MIME)\n types and encodings. The mapping from file extensions to media types is\n defined by the media.types file. If the ~/.media.types file exists it is used\n instead. For backwards compatibility it will also look for ~/.mime.types.', 'PackageMaintainer': 'Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>', 'PackageName': 'liblwp-mediatypes-perl', 'PackageSection': 'perl', 'PackageVersion': '6.02-1', 'SHA-1': '0530980D27278E812B49C5FECA41323A0FC0036C', 'SHA-256': '15B7AA4CDD8B0245736288661A5E497BB19FF7FE34DBC371F9DF412CE1398372'}, {'MD5': 'D4B3A07DE26E759560A2D40EE62CDBF3', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides functions for handling media (also known as MIME)\ntypes and encodings. The mapping from file extensions to media types is\ndefined by the media.types file. If the ~/.media.types file exists it is\nused instead. For backwards compatibility we will also look for\n~/.mime.types.', 'PackageMaintainer': 'CentOS Buildsys <bugs@centos.org>', 'PackageName': 'perl-LWP-MediaTypes', 'PackageRelease': '15.module_el8.3.0+416+b5fcb464', 'PackageVersion': '6.02', 'SHA-1': '05E006FAA08AE987BD4C24C23E82B46F9A50CBAA', 'SHA-256': 'E16B71CBF702009B341FD41DDCA587DC45DCA1AB6671392C2252869AB144BB83'}, {'SHA-1': '073F2DDA028E56833AAB162044A2830586024506'}, {'FileName': 'https://ftp.lysator.liu.se/pub/OpenBSD/6.2/packages//arm//p5-LWP-MediaTypes-6.02.tgz', 'MD5': '5DBB6307C77E9D400DF648A3FF546998', 'SHA-1': '0C9D41F115017DA897B1C87B2F8EF2E3330F0565', 'SHA-256': 'BBD707B435ABE34BB3CC1C2F53AF06EAE9174881507173FC41F452C47C0DE2D9', 'SSDEEP': '384:xGAT292f4v3SZeA0rZihVYXYgeoVKPVB/tnXg+kTi12mIpr8tLS+mwVFZrq:xGK2927t0Uh+Ygr8v/tXghTpmIpreLt+', 'TLSH': 'T1D582D001819693C58BA52F3045C9B07263F9F44AF2D219E4CEC436899B3D5EB1E45EB7'}, {'MD5': '6D58590EFE9D66C2E925F30B756C6B8B', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides functions for handling media (also known as MIME)\ntypes and encodings. The mapping from file extensions to media types is\ndefined by the _media.types_ file. If the _~/.media.types_ file exists it\nis used instead. For backwards compatibility we will also look for\n_~/.mime.types_.\n\nThe following functions are exported by default:\n\n* guess_media_type( $filename )\n\n* guess_media_type( $uri )\n\n* guess_media_type( $filename_or_uri, $header_to_modify )\n\n  This function tries to guess media type and encoding for a file or a URI.\n  It returns the content type, which is a string like \'"text/html"\'. In\n  array context it also returns any content encodings applied (in the order\n  used to encode the file). You can pass a URI object reference, instead of\n  the file name.\n\n  If the type can not be deduced from looking at the file name, then\n  guess_media_type() will let the \'-T\' Perl operator take a look. If this\n  works (and \'-T\' returns a TRUE value) then we return _text/plain_ as the\n  type, otherwise we return _application/octet-stream_ as the type.\n\n  The optional second argument should be a reference to a HTTP::Headers\n  object or any object that implements the $obj->header method in a similar\n  way. When it is present the values of the \'Content-Type\' and\n  \'Content-Encoding\' will be set for this header.\n\n* media_suffix( $type, ... )\n\n  This function will return all suffixes that can be used to denote the\n  specified media type(s). Wildcard types can be used. In a scalar context\n  it will return the first suffix found. Examples:\n\n    @suffixes = media_suffix(\'image/*\', \'audio/basic\');\n    $suffix = media_suffix(\'text/html\');\n\nThe following functions are only exported by explicit request:\n\n* add_type( $type, @exts )\n\n  Associate a list of file extensions with the given media type. Example:\n\n      add_type("x-world/x-vrml" => qw(wrl vrml));\n\n* add_encoding( $type, @ext )\n\n  Associate a list of file extensions with an encoding type. Example:\n\n   add_encoding("x-gzip" => "gz");\n\n* read_media_types( @files )\n\n  Parse media types files and add the type mappings found there. Example:\n\n      read_media_types("conf/mime.types");', 'PackageMaintainer': 'https://bugs.opensuse.org', 'PackageName': 'perl-LWP-MediaTypes', 'PackageRelease': 'lp150.1.7', 'PackageVersion': '6.02', 'SHA-1': '0D9C44056EFDBD9AF3CF955443B8CA4DE5082021', 'SHA-256': '3B3375468482BE50920A11005400ED68576ABBB2E943C919E937B36D7051A3B4'}, {'MD5': 'D73DD5C93F466810BE09C4388A3DDAD9', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides functions for handling media (also known as MIME)\ntypes and encodings. The mapping from file extensions to media types is\ndefined by the media.types file. If the ~/.media.types file exists it is\nused instead. For backwards compatibility we will also look for\n~/.mime.types.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-LWP-MediaTypes', 'PackageRelease': '8.fc23', 'PackageVersion': '6.02', 'SHA-1': '0DF994647537570B2BBFAA40F59D9FCE3DE7B84B', 'SHA-256': 'CE740A722C12493A2A06432E0685958E639FF367CD9C03EEC3FDFA8F71295E92'}, {'FileName': 'https://ftp.lysator.liu.se/pub/OpenBSD/5.7/packages//vax//p5-LWP-MediaTypes-6.02.tgz', 'MD5': '4FB4830F42DF10130D6D66429E53C184', 'SHA-1': '0EFDA1A08E87B45AE93E424864E496C448E0C5C7', 'SHA-256': '41C98CACCA841FDB80185D615A9206CE8FC1328E048F1E4A23C08793482728F8', 'SSDEEP': '384:0YmT+tfU66QjO3/9RH5EjBn2NdOOoDI11txhYEX5udE3b65d:0YmytfU66/V95EVIoM1Ab', 'TLSH': 'T19292D0461DAABFF19AD21D6081D630BA7F88F355C690C28A29D0833139375EB5DBF90C'}, {'FileName': 'https://ftp.lysator.liu.se/pub/OpenBSD/6.6/packages//amd64//p5-LWP-MediaTypes-6.02.tgz', 'MD5': '1806E62C54EB1043E6D86CFC40D73327', 'SHA-1': '0F648316A88B72676A006DE6B3587F149328F3DC', 'SHA-256': '1F5FED8F580EB1D5C71DA001A51A4836194D35D5730CBFA853A5858871B4487B', 'SSDEEP': '384:HqIyJVFKGYiY9gicmJ9zdsgYLCJJtNHRq7hDcj+3Tz/cqfYVh:HqIyJVFXYl9gFmJ9JsoJtqNcj+X/nqh', 'TLSH': 'T11A82D0697F6A05AEF186E378829F554C7EF17C505A010843261C877DDFD90FAFA61700'}]}