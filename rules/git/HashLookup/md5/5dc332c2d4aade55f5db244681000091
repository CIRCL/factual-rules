{'FileName': './usr/share/licenses/perl-Try-Tiny/LICENCE', 'FileSize': '1182', 'MD5': '5DC332C2D4AADE55F5DB244681000091', 'SHA-1': '7E8E33F9E95AB89EFFB710036A61ACE6A226A6C0', 'SHA-256': 'F1864EDE834871A1207FCD19838B6BD5E1FF0A8704F5CC523FC397126041ED0B', 'SSDEEP': '24:gwMB4JtvH0yxgt6Hw1jX9CmsUW8OV/ZWE3U/q/Pz:gwMiJBlxEhPFsfnWE3OY7', 'TLSH': 'T19821742F76904B731CA643B02965684AF31AB28F766F1280206EF240222B42CD4FB840', 'tar:gname': 'root', 'tar:uname': 'root', 'hashlookup:parent-total': 22, 'parents': [{'MD5': '797B48CAB6738E8DFF575C3780EF36AA', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '8.fc32', 'PackageVersion': '0.30', 'SHA-1': '02CF9BA41ECF3D9615D70C08B7709B606339A799', 'SHA-256': '39987DB04D2FEE6357F751FB0B0086DF952A528141B785D5B876BA128877D9AB'}, {'MD5': 'EEE0FF9287D507535EE19D7AB579E6D8', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '7.module_f32+5981+f8298627', 'PackageVersion': '0.30', 'SHA-1': '0E053AC2CAC90FCA4EBEFFA94F481EDDF1472C6D', 'SHA-256': '39AA05EE27719C6058AC036D6422AB04D26DA14B793EB77209E456653FC8FA7D'}, {'MD5': '8A41A71DBDEDDFAA70C986B86FE24799', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones \'try\'/\'catch\'/\'finally\' statements that are\ndesigned to minimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling \'return\' from the \'try\'\nblock to return from the parent subroutine. These extra features come at a\ncost of a few dependencies, namely Devel::Declare and Scope::Upper which\nare occasionally problematic, and the additional catch filtering uses Moose\ntype constraints which may not be desirable either.\n\nThe main focus of this module is to provide simple and reliable error\nhandling for those having a hard time installing TryCatch, but who still\nwant to write correct \'eval\' blocks without 5 lines of boilerplate each\ntime.\n\nIt\'s designed to work as correctly as possible in light of the various\npathological edge cases (see BACKGROUND) and to be compatible with any\nstyle of error values (simple strings, references, objects, overloaded\nobjects, etc).\n\nIf the \'try\' block dies, it returns the value of the last statement\nexecuted in the \'catch\' block, if there is one. Otherwise, it returns\n\'undef\' in scalar context or the empty list in list context. The following\nexamples all assign \'"bar"\' to \'$x\':\n\n  my $x = try { die "foo" } catch { "bar" };\n  my $x = try { die "foo" } || "bar";\n  my $x = (try { die "foo" }) // "bar";\n\n  my $x = eval { die "foo" } || "bar";\n\nYou can add \'finally\' blocks, yielding the following:\n\n  my $x;\n  try { die \'foo\' } finally { $x = \'bar\' };\n  try { die \'foo\' } catch { warn "Got a die: $_" } finally { $x = \'bar\' };\n\n\'finally\' blocks are always executed making them suitable for cleanup code\nwhich cannot be handled using local. You can add as many \'finally\' blocks\nto a given \'try\' block as you like.\n\nNote that adding a \'finally\' block without a preceding \'catch\' block\nsuppresses any errors. This behaviour is consistent with using a standalone\n\'eval\', but it is not consistent with \'try\'/\'finally\' patterns found in\nother programming languages, such as Java, Python, Javascript or C#. If you\nlearnt the \'try\'/\'finally\' pattern from one of these languages, watch out\nfor this.', 'PackageMaintainer': 'https://www.suse.com/', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '1.17', 'PackageVersion': '0.30', 'SHA-1': '1FF02536A64A3C2F208472C71DE092D4E6FC0282', 'SHA-256': 'E9AED2A018EEA94213E20A4985ACD33DCDACEA48AADC326697246C77FA449195'}, {'MD5': '5738A6E3EB9A9B3E98EF6A45BC9AFE38', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '2.fc24', 'PackageVersion': '0.24', 'SHA-1': '232DC4A102D50110D5B5BCDE4C5E011F9ECFBCF0', 'SHA-256': '86BD24CBD53DF275FA38B7FCF49513602B033BC7923D2A789DE148FD4525F232'}, {'FileName': 'http://archlinux.mirror.root.lu//pool//packages//perl-try-tiny-0.30-5-any.pkg.tar.zst', 'MD5': '27F847FB064535E6FBF83F1162B27807', 'SHA-1': '2C6599C39EF176CB8E835284C05C8D258CF0BE5A', 'SHA-256': 'DF4B8AE9EC944C8C7AED587F83ABB9935EC011399F4EDD5FB809B0D345AAFD14', 'SSDEEP': '384:xsEwoohY3hFUI3KjXlBh9Jno0t6MPkRPhBib0cD21M+CqzYmexM:f74YheVrjo0tzP2hBPcN+CqP/', 'TLSH': 'T1DE92D050F7C47F644C91CDADB18A5D30BC6302F0AD232AA223FA833319E85965ED16D2'}, {'MD5': 'F7D55599C9EA7A600DAC812F3961E739', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '2.fc24', 'PackageVersion': '0.24', 'SHA-1': '2D7051C3424A2FB08671DFC2312381FB5AF395BA', 'SHA-256': '066F8A944B95AB89B979D0149CFDCC5992B64DC67AB709B548B0B87BA8C73A46'}, {'MD5': '2F5F0BA46FC2E9FF553D2B5E6625C4D7', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '7.module_f33+9711+083176da', 'PackageVersion': '0.30', 'SHA-1': '382BF0C74AB5525F990035540646F9184C8B0E2B', 'SHA-256': '3C6D6B0369C146D8A4F1625BA7476A98E742656653B3B29341EF23A33DBD3C1F'}, {'MD5': 'DEAB311EF1C7722C2909F878E7F0DAF6', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'Fedora Project', 'PackageName': 'perl-Try-Tiny', 'PackageRelease': '10.module_f33+9980+83f6a35a', 'PackageVersion': '0.30', 'SHA-1': '3DCDF4A8106B8CD476B678172E387AB2C0FA5DDA', 'SHA-256': '125E62B2A0A5C9BB76AF04FE38FCBF74B6113B4E8AFDC08CEFA46A112ED23D25'}, {'MD5': 'F3FEC47F178C0B15C790319EFC782CAB', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'CBS <cbs@centos.org>', 'PackageName': 'rh-perl526-perl-Try-Tiny', 'PackageRelease': '5.el7', 'PackageVersion': '0.28', 'SHA-1': '47C9532B48E82167016A08714DA1E0DE6134C5DA', 'SHA-256': '47B5D5EA75ACCC5511318B95C22EC0176360BE5E58B2091117F90C319DEA7702'}, {'MD5': 'C06F970C17FB8AF0BFAB2E1DADD52FEB', 'PackageArch': 'noarch', 'PackageDescription': 'This module provides bare bones try/catch statements that are designed to\nminimize common mistakes with eval blocks, and NOTHING else.\n\nThis is unlike TryCatch, which provides a nice syntax and avoids adding\nanother call stack layer, and supports calling return from the try block to\nreturn from the parent subroutine. These extra features come at a cost of a\nfew dependencies, namely Devel::Declare and Scope::Upper that are occasionally\nproblematic, and the additional catch filtering uses Moose type constraints,\nwhich may not be desirable either.', 'PackageMaintainer': 'CBS <cbs@centos.org>', 'PackageName': 'rh-perl524-perl-Try-Tiny', 'PackageRelease': '4.el7', 'PackageVersion': '0.24', 'SHA-1': '6397EB42D7AC47398AAFF48888A44E85655277A9', 'SHA-256': '6D27D1B3F47AE9FBACA63321A7B08C0F69C66DD3D40B3451694DF7FFD486B6E2'}]}